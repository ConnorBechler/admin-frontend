# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  ''      $server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}

proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;

server {
  gzip on;
  gzip_min_length 1k;
  gzip_comp_level 4;
  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
  gzip_vary on;
  gzip_disable "MSIE [1-6]\.";

  listen 80 default_server;

  root /usr/share/nginx/html;

  index index.html;

  location / {
    try_files $uri $uri/ /index.html;
  }

  location /index.html {
    expires -1;
    add_header Cache-Control "no-cache, public, must-revalidate, proxy-revalidate";
  }

  location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    access_log off;
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  location /audio/wav {
    alias /opt/storage/wav/;
    try_files $uri $uri.wav =400;
  }

  location /audio {
    alias /opt/storage/stream/;
    try_files $uri $uri.mp3 =400;
  }

  location /api {
    rewrite ^/api/(.*) /$1 break;
    proxy_pass ${VUE_APP_API_BASE_URL};
  }

  location /socket.io {
    proxy_pass ${VUE_APP_API_BASE_URL}/socket.io;
    proxy_http_version      1.1;
    proxy_set_header        Upgrade                 $http_upgrade;
    proxy_set_header        Connection              $proxy_connection;
    proxy_set_header        Host                    $host;
    proxy_set_header        X-Real-IP               $remote_addr;
    proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
  }
  
  client_max_body_size 250m;
  proxy_read_timeout 300;
  proxy_connect_timeout 300;
  proxy_send_timeout 300; 
}
